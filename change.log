_______________________________________________________________________________________________________________________
Classy Apps v1.0.9

1. Maven Release configured for Jenkins implementation
2. Change log order reversed.

_______________________________________________________________________________________________________________________
Classy Apps v1.0.8
Introduce Maven Release support, with snapshot versioning and SCM and Distribution Management activation.
Also added Tele-Genious Android Application as production APK pilot. This will be developed into an eXPL sample application. 
Only releases will be pushed to Github in future.
_______________________________________________________________________________________________________________________
Classy Apps v1.0.7

1.  Update Maven Android plugin version to 4.2.1
2. Upgrade Gradle project Support Library version to 21.1+
3. Fix android-maven-plugin Lifecycle-mapping error which disabled m2e-android plugin
4. Move android-maven-plugin config to classy_apps pom
5. Remove classyandroid test-jar dependency from classyfy pom
_______________________________________________________________________________________________________________________
Classy Apps v1.0.6

1. Update android.sdk.version to 5.1.1 (API 22)
2. Update android.support.version to 22.1.1
3. Revised support library artifacts to align with Android Support Libraries
4. Updated ClassyFy integration tests to work in API 22 runtime environment. All working in Eclipse, 
   but 2 fail in Maven - not worth persuing.
_______________________________________________________________________________________________________________________
Classy Apps v1.0.5

1.  Add Gradle folder containing zipped Android Studio project for all sample applications
1.  Android Hello Two Dbs synched with Gradle version
2.  Change "classic" Eclipse install script files and profiles to install Android Dependencies and pre-configured .classpath. 
    This is a work-around for m2e-android Non Runtime Container not working.  
3.  Remove Eclipse generated project files from reposistory
4.  Remove from poms dependencies which are no longer required
5.  Update Maven Android plugin version to 4.2.0
6.  Reverse android.support.version to 21.0.1
7.  Reverse android.platform.version to 21, android.sdk.version to 5.0.1_r2 
8.  Change Support Library apklib to aar.
9.  Update as_compatibility-v7-appcompat pom so initialization and clean up is perform only as an "eclipse" profile.
10. Add m2e Lifecycle mapping jar to local repository install
11. Replace ClassyTestRunner with RobolectricTestRunner as the latter now reads the AndroidManifests in target/unpackedlibs
______________________________________________________________________________________________________________________
Classy Apps v1.0.4

1. Update Robolectric to 3.0.rc-2 (some trivial code changes required)
2. Update android.sdk.version to 5.1.1 (API 22)
3. Update android.support.version to 22.0.0
5. Change to API 21 for all Android apps for highest Robolectric API supported

_______________________________________________________________________________________________________________________
Classy Apps v1.0.3

1. Upgrade Classy Tools to v1.0.3.
2. ClassyFy app MainActivity uses new PersistenceLoader class (see Classy Tools v1.0.3 change 4)
3. Add new "db-upgrade" sample application to replace previous upgrade unit test in android-hello-two-dbs-v2

_______________________________________________________________________________________________________________________
Classy Apps v1.0.2

1. Added Android HelloTwoDs sample applications 

* android-hello-two-dbs demonstrates support for 2 databases provided by persistence.xml configuration.
* android-hello-two-dbs also demonstrates layering on a Java database implemention using just a dependency configuration change
* android-hello-two-dbs-v2 has a revised database schema and support for a version upgrade
* android-hello-two-dbs-v2 Unit test demonstrates database upgrade in a single session.

2. Updated ClassyFy StartUp class to use PersistenceFactory initializeAllDatabases() (point 6 above)

3. Changed ClassyFy AlfrescoFilePlanLoader class and DataLoader interface because of Classy Tools changes

_______________________________________________________________________________________________________________________
_______________________________________________________________________________________________________________________